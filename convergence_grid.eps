%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 8.
%%Title: E:\UIUC\Research\Integreting Security Task\ServerExperiments\convergence_grid.eps
%%CreationDate: 04/10/2016  19:34:18
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    96   238   515   553
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    96   238   515   553
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1152 6636 csm

    0     0  5039  3780 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5040 3781 rf
6 w
0 3081 3906 0 0 -3081 654 3364 4 MP
PP
-3906 0 0 3081 3906 0 0 -3081 654 3364 5 MP stroke
4 w
DO
0 sg
 654 3364 mt  654  283 L
 654  283 mt  654  283 L
 980 3364 mt  980  283 L
 980  283 mt  980  283 L
1305 3364 mt 1305  283 L
1305  283 mt 1305  283 L
1631 3364 mt 1631  283 L
1631  283 mt 1631  283 L
1956 3364 mt 1956  283 L
1956  283 mt 1956  283 L
2282 3364 mt 2282  283 L
2282  283 mt 2282  283 L
2607 3364 mt 2607  283 L
2607  283 mt 2607  283 L
2932 3364 mt 2932  283 L
2932  283 mt 2932  283 L
3258 3364 mt 3258  283 L
3258  283 mt 3258  283 L
3583 3364 mt 3583  283 L
3583  283 mt 3583  283 L
3909 3364 mt 3909  283 L
3909  283 mt 3909  283 L
4234 3364 mt 4234  283 L
4234  283 mt 4234  283 L
4560 3364 mt 4560  283 L
4560  283 mt 4560  283 L
 654 3276 mt 4560 3276 L
4560 3276 mt 4560 3276 L
 654 2986 mt 4560 2986 L
4560 2986 mt 4560 2986 L
 654 2695 mt 4560 2695 L
4560 2695 mt 4560 2695 L
 654 2404 mt 4560 2404 L
4560 2404 mt 4560 2404 L
 654 2114 mt 4560 2114 L
4560 2114 mt 4560 2114 L
 654 1823 mt 4560 1823 L
4560 1823 mt 4560 1823 L
 654 1532 mt 4560 1532 L
4560 1532 mt 4560 1532 L
 654 1242 mt 4560 1242 L
4560 1242 mt 4560 1242 L
 654  951 mt 4560  951 L
4560  951 mt 4560  951 L
 654  660 mt 4560  660 L
4560  660 mt 4560  660 L
 654  370 mt 4560  370 L
4560  370 mt 4560  370 L
SO
6 w
 654  283 mt 4560  283 L
 654 3364 mt 4560 3364 L
4560 3364 mt 4560  283 L
 654 3364 mt  654  283 L
 654 3364 mt 4560 3364 L
 654 3364 mt  654  283 L
 654 3364 mt  654 3324 L
 654  283 mt  654  322 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 621 3509 mt 
(0) s
 980 3364 mt  980 3324 L
 980  283 mt  980  322 L
 947 3509 mt 
(5) s
1305 3364 mt 1305 3324 L
1305  283 mt 1305  322 L
1239 3509 mt 
(10) s
1631 3364 mt 1631 3324 L
1631  283 mt 1631  322 L
1565 3509 mt 
(15) s
1956 3364 mt 1956 3324 L
1956  283 mt 1956  322 L
1890 3509 mt 
(20) s
2282 3364 mt 2282 3324 L
2282  283 mt 2282  322 L
2216 3509 mt 
(25) s
2607 3364 mt 2607 3324 L
2607  283 mt 2607  322 L
2541 3509 mt 
(30) s
2932 3364 mt 2932 3324 L
2932  283 mt 2932  322 L
2866 3509 mt 
(35) s
3258 3364 mt 3258 3324 L
3258  283 mt 3258  322 L
3192 3509 mt 
(40) s
3583 3364 mt 3583 3324 L
3583  283 mt 3583  322 L
3517 3509 mt 
(45) s
3909 3364 mt 3909 3324 L
3909  283 mt 3909  322 L
3843 3509 mt 
(50) s
4234 3364 mt 4234 3324 L
4234  283 mt 4234  322 L
4168 3509 mt 
(55) s
4560 3364 mt 4560 3324 L
4560  283 mt 4560  322 L
4494 3509 mt 
(60) s
 654 3276 mt  694 3276 L
4560 3276 mt 4520 3276 L
 554 3320 mt 
(0) s
 654 2986 mt  694 2986 L
4560 2986 mt 4520 2986 L
 454 3030 mt 
(0.1) s
 654 2695 mt  694 2695 L
4560 2695 mt 4520 2695 L
 454 2739 mt 
(0.2) s
 654 2404 mt  694 2404 L
4560 2404 mt 4520 2404 L
 454 2448 mt 
(0.3) s
 654 2114 mt  694 2114 L
4560 2114 mt 4520 2114 L
 454 2158 mt 
(0.4) s
 654 1823 mt  694 1823 L
4560 1823 mt 4520 1823 L
 454 1867 mt 
(0.5) s
 654 1532 mt  694 1532 L
4560 1532 mt 4520 1532 L
 454 1576 mt 
(0.6) s
 654 1242 mt  694 1242 L
4560 1242 mt 4520 1242 L
 454 1286 mt 
(0.7) s
 654  951 mt  694  951 L
4560  951 mt 4520  951 L
 454  995 mt 
(0.8) s
 654  660 mt  694  660 L
4560  660 mt 4520  660 L
 454  704 mt 
(0.9) s
 654  370 mt  694  370 L
4560  370 mt 4520  370 L
 554  414 mt 
(1) s
 654  283 mt 4560  283 L
 654 3364 mt 4560 3364 L
4560 3364 mt 4560  283 L
 654 3364 mt  654  283 L
gs 655 283 3906 3082 rc
12 w
2148 -2 390 -3 260 -3 456 -2 65 -3 65 -8 65 -1098 0 -1787 
785 3276 9 MP stroke
gr

12 w
  36   36  785 3276 PO
  36   36  785 1489 PO
  36   36  850  391 PO
  36   36  915  383 PO
  36   36  980  380 PO
  36   36 1436  378 PO
  36   36 1696  375 PO
  36   36 2086  372 PO
  36   36 4234  370 PO
  36   36  785 3276 FO
  36   36  785 1489 FO
  36   36  850  391 FO
  36   36  915  383 FO
  36   36  980  380 FO
  36   36 1436  378 FO
  36   36 1696  375 FO
  36   36 2086  372 FO
  36   36 4234  370 FO
gs 655 283 3906 3082 rc
gr

%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 132 FMSR

1634 3661 mt 
(Number of Iterations to Converge) s
 370 2250 mt  -90 rotate
(Empirical CDF) s
90 rotate
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
